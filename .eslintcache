[{"/home/barsha/Documents/projects/Ast1/src/index.js":"1","/home/barsha/Documents/projects/Ast1/src/App.js":"2","/home/barsha/Documents/projects/Ast1/src/reportWebVitals.js":"3","/home/barsha/Documents/projects/Ast1/src/Components/home.jsx":"4","/home/barsha/Documents/projects/Ast1/src/Components/about.jsx":"5","/home/barsha/Documents/projects/Ast1/src/Components/contact.jsx":"6","/home/barsha/Documents/projects/Ast1/src/Components/blog.jsx":"7","/home/barsha/Documents/projects/Ast1/src/Components/Footer.jsx":"8","/home/barsha/Documents/projects/Ast1/src/Components/nomatch.jsx":"9","/home/barsha/Documents/projects/Ast1/src/Components/navbar.jsx":"10","/home/barsha/Documents/projects/Ast1/src/Components/jumbo.jsx":"11","/home/barsha/Documents/projects/Ast1/src/Components/Products/Products.jsx":"12","/home/barsha/Documents/projects/Ast1/src/Components/Products/ProductDisplay.jsx":"13","/home/barsha/Documents/projects/Ast1/src/Components/Products/ProductCategory.jsx":"14","/home/barsha/Documents/projects/Ast1/src/Components/Cardlist.jsx":"15","/home/barsha/Documents/projects/Ast1/src/Components/ProductJumbo.jsx":"16","/home/barsha/Documents/projects/Ast1/src/Components/Data.jsx":"17","/home/barsha/Documents/projects/Ast1/src/Components/Products/ProductData.jsx":"18","/home/barsha/Documents/projects/Ast1/src/Components/Products/ProductCard.jsx":"19","/home/barsha/Documents/projects/Ast1/src/Components/Cards.jsx":"20","/home/barsha/Documents/projects/Ast1/src/Components/Layout.jsx":"21"},{"size":459,"mtime":1611589969642,"results":"22","hashOfConfig":"23"},{"size":1527,"mtime":1611591481307,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1611589969642,"results":"25","hashOfConfig":"23"},{"size":1963,"mtime":1611591978666,"results":"26","hashOfConfig":"23"},{"size":1845,"mtime":1611589969638,"results":"27","hashOfConfig":"23"},{"size":665,"mtime":1611589969638,"results":"28","hashOfConfig":"23"},{"size":90,"mtime":1611589969638,"results":"29","hashOfConfig":"23"},{"size":1759,"mtime":1611592064066,"results":"30","hashOfConfig":"23"},{"size":105,"mtime":1611589969638,"results":"31","hashOfConfig":"23"},{"size":2014,"mtime":1611589969638,"results":"32","hashOfConfig":"23"},{"size":866,"mtime":1611591339903,"results":"33","hashOfConfig":"23"},{"size":170,"mtime":1611589969638,"results":"34","hashOfConfig":"23"},{"size":7580,"mtime":1611589969638,"results":"35","hashOfConfig":"23"},{"size":2701,"mtime":1611589969638,"results":"36","hashOfConfig":"23"},{"size":578,"mtime":1611589969638,"results":"37","hashOfConfig":"23"},{"size":852,"mtime":1611589969638,"results":"38","hashOfConfig":"23"},{"size":392,"mtime":1611589969638,"results":"39","hashOfConfig":"23"},{"size":9351,"mtime":1611589969638,"results":"40","hashOfConfig":"23"},{"size":1959,"mtime":1611589969638,"results":"41","hashOfConfig":"23"},{"size":862,"mtime":1611589969638,"results":"42","hashOfConfig":"23"},{"size":163,"mtime":1611589969638,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1ql7yq7",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/barsha/Documents/projects/Ast1/src/index.js",[],["89","90"],"/home/barsha/Documents/projects/Ast1/src/App.js",[],"/home/barsha/Documents/projects/Ast1/src/reportWebVitals.js",[],"/home/barsha/Documents/projects/Ast1/src/Components/home.jsx",[],"/home/barsha/Documents/projects/Ast1/src/Components/about.jsx",[],"/home/barsha/Documents/projects/Ast1/src/Components/contact.jsx",[],"/home/barsha/Documents/projects/Ast1/src/Components/blog.jsx",[],"/home/barsha/Documents/projects/Ast1/src/Components/Footer.jsx",[],"/home/barsha/Documents/projects/Ast1/src/Components/nomatch.jsx",[],"/home/barsha/Documents/projects/Ast1/src/Components/navbar.jsx",[],"/home/barsha/Documents/projects/Ast1/src/Components/jumbo.jsx",[],"/home/barsha/Documents/projects/Ast1/src/Components/Products/Products.jsx",[],"/home/barsha/Documents/projects/Ast1/src/Components/Products/ProductDisplay.jsx",["91","92","93","94"],"import React from \"react\";\nimport \"./ProductDisplay.css\";\n// import Image from \"../../1.jpg\";\nimport { WaterSealData, ChemicalSealData, OilSealData } from \"./ProductData\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  ListGroupItem,\n  Card,\n  Container,\n  Button\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport const ProductDisplay = ({ match }) => {\n  const key_id = match.params.k_id;\n  if (key_id === \"1\") {\n    const data = WaterSealData.find(d => d.id === match.params.id);\n    return (\n      <Container style={{padding:\"2rem\"}} >\n        <Row  className=\"justify-content-md-center\">\n          <Col sm={12} md={8} lg={8} >\n          <Link to={`/products/${key_id}`}>\n            <Button>back</Button>\n          </Link>{\" \"}\n          </Col>\n          <Col sm={12} md={8} lg={5} >\n            <Card>\n              <img className=\"single-image\" src={data.img} alt=\"image\" />\n            </Card>\n            <ListGroup variant=\"flush\">\n              <ListGroupItem\n                style={{\n                  backgroundColor: \"rgb(72, 105, 155)\",\n                  color: \"white\"\n                }}\n              >\n                <strong> Title: {data.Productname} </strong>\n              </ListGroupItem>\n              <ListGroupItem\n                style={{\n                  backgroundColor: \"rgb(72, 105, 155)\",\n                  color: \"white\"\n                }}\n              >\n                <strong>Application: {data.Content.Application}</strong>\n              </ListGroupItem>\n              <ListGroupItem\n                style={{\n                  backgroundColor: \"rgb(72, 105, 155)\",\n                  color: \"white\"\n                }}\n              >\n                <strong>Features: {data.Content.Features}</strong>\n              </ListGroupItem>\n              <ListGroupItem\n                style={{\n                  backgroundColor: \"rgb(72, 105, 155)\",\n                  color: \"white\"\n                }}\n              >\n                <strong>\n                  Operating Conditions: {data.Content.OperatingConditions}\n                </strong>\n              </ListGroupItem>\n              <ListGroupItem\n                style={{\n                  backgroundColor: \"rgb(72, 105, 155)\",\n                  color: \"white\"\n                }}\n              >\n                <strong>Pressure:{data.Content.Pressure}</strong>\n              </ListGroupItem>\n              <ListGroupItem\n                style={{\n                  backgroundColor: \"rgb(72, 105, 155)\",\n                  color: \"white\"\n                }}\n              >\n                <strong> AvailableSize:{data.Content.AvailableSize}</strong>\n              </ListGroupItem>\n            </ListGroup>\n           </Col>\n        </Row>\n      </Container>\n    );\n  } else if (key_id === \"2\") {\n    const data = ChemicalSealData.find(d => d.id === match.params.id);\n    return (\n      <Container className=\"justify-content-md-center\">\n        <Row style={{ backgroundColor: \"rgb(72, 105, 155)\", padding: \"2rem\" }}>\n          <Link to={`/products/${key_id}`}>\n            <Button>back</Button>\n          </Link>{\" \"}\n          <Col sm={12} md={5} lg={4}>\n            <Card>\n              <img className=\"single-image\" src={data.img} alt=\"image\" />\n            </Card>\n          </Col>\n          <Col sm={12} md={7} lg={6}>\n            <ListGroup variant=\"flush\">\n              <ListGroupItem\n                style={{\n                  backgroundColor: \"rgb(72, 105, 155)\",\n                  color: \"white\"\n                }}\n              >\n                <strong> Title: {data.Productname} </strong>\n              </ListGroupItem>\n              <ListGroupItem\n                style={{\n                  backgroundColor: \"rgb(72, 105, 155)\",\n                  color: \"white\"\n                }}\n              >\n                <strong>Application: {data.Content.Application}</strong>\n              </ListGroupItem>\n              <ListGroupItem\n                style={{\n                  backgroundColor: \"rgb(72, 105, 155)\",\n                  color: \"white\"\n                }}\n              >\n                <strong>Features: {data.Content.Features}</strong>\n              </ListGroupItem>\n              <ListGroupItem\n                style={{\n                  backgroundColor: \"rgb(72, 105, 155)\",\n                  color: \"white\"\n                }}\n              >\n                <strong>\n                  Operating Conditions: {data.Content.OperatingConditions}\n                </strong>\n              </ListGroupItem>\n              <ListGroupItem\n                style={{\n                  backgroundColor: \"rgb(72, 105, 155)\",\n                  color: \"white\"\n                }}\n              >\n                <strong>Pressure:{data.Content.Pressure}</strong>\n              </ListGroupItem>\n              <ListGroupItem\n                style={{\n                  backgroundColor: \"rgb(72, 105, 155)\",\n                  color: \"white\"\n                }}\n              >\n                <strong> AvailableSize:{data.Content.AvailableSize}</strong>\n              </ListGroupItem>\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    );\n  } else if (key_id === \"3\") {\n    const data = OilSealData.find(d => d.id === match.params.id);\n    return (\n      <Container className=\"justify-content-md-center\">\n        <Link to={`/products/${key_id}`}>\n          <Button>back</Button>\n        </Link>{\" \"}\n        <Row style={{ backgroundColor: \"rgb(72, 105, 155)\", padding: \"2rem\" }}>\n          <Col sm={12} md={5} lg={4}>\n            <Card>\n              <img className=\"single-image\" src={data.img} alt=\"image\" />\n            </Card>\n          </Col>\n          <Col sm={12} md={7} lg={6}>\n            <ListGroup variant=\"flush\">\n              <ListGroupItem\n                style={{\n                  backgroundColor: \"rgb(72, 105, 155)\",\n                  color: \"white\"\n                }}\n              >\n                <strong> Title: {data.Productname} </strong>\n              </ListGroupItem>\n              <ListGroupItem\n                style={{\n                  backgroundColor: \"rgb(72, 105, 155)\",\n                  color: \"white\"\n                }}\n              >\n                <strong>Application: {data.Content.Application}</strong>\n              </ListGroupItem>\n              <ListGroupItem\n                style={{\n                  backgroundColor: \"rgb(72, 105, 155)\",\n                  color: \"white\"\n                }}\n              >\n                <strong>Features: {data.Content.Features}</strong>\n              </ListGroupItem>\n              <ListGroupItem\n                style={{\n                  backgroundColor: \"rgb(72, 105, 155)\",\n                  color: \"white\"\n                }}\n              >\n                <strong>\n                  Operating Conditions: {data.Content.OperatingConditions}\n                </strong>\n              </ListGroupItem>\n              <ListGroupItem\n                style={{\n                  backgroundColor: \"rgb(72, 105, 155)\",\n                  color: \"white\"\n                }}\n              >\n                <strong>Pressure:{data.Content.Pressure}</strong>\n              </ListGroupItem>\n              <ListGroupItem\n                style={{\n                  backgroundColor: \"rgb(72, 105, 155)\",\n                  color: \"white\"\n                }}\n              >\n                <strong> AvailableSize:{data.Content.AvailableSize}</strong>\n              </ListGroupItem>\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n};\n","/home/barsha/Documents/projects/Ast1/src/Components/Products/ProductCategory.jsx",["95","96"],"import React from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { WaterSealData, ChemicalSealData, OilSealData } from \"./ProductData\";\nimport { WaterSealCard, ChemicalSealCard, OilSealCard } from \"./ProductCard\";\n\nimport { Data } from \"../Data\";\n\nexport const ProductCategory = ({ match }) => {\n  const data = Data.find(d => d.id === match.params.id);\n  if (data.id === \"1\") {\n    return (\n      <div className=\"contain\">\n        <Link to=\"/products\">\n          <Button>\n            <i className=\"fas fa-arrow-alt-circle-left\" />\n          </Button>\n        </Link>\n        <br />\n        <h1 style={{ textAlign: \"center\" }}>Water Seals</h1>\n        <br />\n        <Row>\n          {WaterSealData.map((WaterSealData, i) => (\n            <Col key={WaterSealData.id} sm={11} md={6} lg={4} xl={3}>\n              <WaterSealCard\n                key={i}\n                id={WaterSealData.id}\n                img={WaterSealData.img}\n                Productname={WaterSealData.Productname}\n                k_id={data.id}\n              />\n              <br />\n            </Col>\n          ))}\n        </Row>\n        //{\" \"}\n      </div>\n    );\n  } else if (data.id === \"2\") {\n    return (\n      <div class=\"contain\">\n        <Link to=\"/products\">\n          <Button>\n            <i className=\"fas fa-arrow-alt-circle-left\" />\n          </Button>\n        </Link>\n        <h1 style={{ textAlign: \"center\" }}>Chemical Seals</h1>\n        <Row>\n          {ChemicalSealData.map((ChemicalSealData, i) => (\n            <Col key={ChemicalSealData.id} sm={11} md={6} lg={4} xl={3}>\n              <ChemicalSealCard\n                key={i}\n                id={ChemicalSealData.id}\n                img={ChemicalSealData.img}\n                Productname={ChemicalSealData.Productname}\n                k_id={data.id}\n              />\n              <br />\n            </Col>\n          ))}\n        </Row>\n      </div>\n    );\n  } else if (data.id === \"3\") {\n    return (\n      <div class=\"contain\">\n        <Link to=\"/products\">\n          <Button>\n            <i className=\"fas fa-arrow-alt-circle-left\" />\n          </Button>\n        </Link>\n        <h1 style={{ textAlign: \"center\" }}>Oil Seals</h1>\n        <Row>\n          {OilSealData.map((OilSealData, i) => (\n            <Col key={OilSealData.id} sm={11} md={6} lg={4} xl={3}>\n              <OilSealCard\n                key={i}\n                id={OilSealData.id}\n                img={OilSealData.img}\n                Productname={OilSealData.Productname}\n                k_id={data.id}\n              />\n              <br />\n            </Col>\n          ))}\n        </Row>\n      </div>\n    );\n  }\n};\n","/home/barsha/Documents/projects/Ast1/src/Components/Cardlist.jsx",[],"/home/barsha/Documents/projects/Ast1/src/Components/ProductJumbo.jsx",[],"/home/barsha/Documents/projects/Ast1/src/Components/Data.jsx",[],"/home/barsha/Documents/projects/Ast1/src/Components/Products/ProductData.jsx",[],"/home/barsha/Documents/projects/Ast1/src/Components/Products/ProductCard.jsx",[],"/home/barsha/Documents/projects/Ast1/src/Components/Cards.jsx",[],"/home/barsha/Documents/projects/Ast1/src/Components/Layout.jsx",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":8,"column":3,"nodeType":"103","messageId":"104","endLine":8,"endColumn":8},{"ruleId":"105","severity":1,"message":"106","line":31,"column":15,"nodeType":"107","endLine":31,"endColumn":74},{"ruleId":"105","severity":1,"message":"106","line":99,"column":15,"nodeType":"107","endLine":99,"endColumn":74},{"ruleId":"105","severity":1,"message":"106","line":169,"column":15,"nodeType":"107","endLine":169,"endColumn":74},{"ruleId":"101","severity":1,"message":"108","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":35,"column":15,"nodeType":"111","endLine":36,"endColumn":11},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Container' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-global-assign","no-unsafe-negation"]