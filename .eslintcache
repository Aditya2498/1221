[{"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\index.js":"1","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\reportWebVitals.js":"2","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\App.js":"3","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\Footer.jsx":"4","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\contact.jsx":"5","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\nomatch.jsx":"6","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\Products\\Products.jsx":"7","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\about.jsx":"8","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\Products\\ProductDisplay.jsx":"9","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\home.jsx":"10","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\navbar.jsx":"11","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\jumbo.jsx":"12","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\Products\\ProductCategory.jsx":"13","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\Cardlist.jsx":"14","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\Data.jsx":"15","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\Products\\ProductData.jsx":"16","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\ProductJumbo.jsx":"17","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\Products\\ProductCard.jsx":"18","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\Cards.jsx":"19"},{"size":475,"mtime":1611308264145,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1611308264145,"results":"22","hashOfConfig":"21"},{"size":1467,"mtime":1611904617493,"results":"23","hashOfConfig":"21"},{"size":1596,"mtime":1611815882584,"results":"24","hashOfConfig":"21"},{"size":885,"mtime":1611818787524,"results":"25","hashOfConfig":"21"},{"size":111,"mtime":1611308264145,"results":"26","hashOfConfig":"21"},{"size":177,"mtime":1611905049603,"results":"27","hashOfConfig":"21"},{"size":5667,"mtime":1611904647034,"results":"28","hashOfConfig":"21"},{"size":7810,"mtime":1611310368877,"results":"29","hashOfConfig":"21"},{"size":1783,"mtime":1611818543673,"results":"30","hashOfConfig":"21"},{"size":1813,"mtime":1611904196651,"results":"31","hashOfConfig":"21"},{"size":912,"mtime":1611661421044,"results":"32","hashOfConfig":"21"},{"size":2968,"mtime":1611906528639,"results":"33","hashOfConfig":"21"},{"size":620,"mtime":1611904029125,"results":"34","hashOfConfig":"21"},{"size":414,"mtime":1611308264138,"results":"35","hashOfConfig":"21"},{"size":9646,"mtime":1611308264141,"results":"36","hashOfConfig":"21"},{"size":893,"mtime":1611576766624,"results":"37","hashOfConfig":"21"},{"size":2345,"mtime":1611906364611,"results":"38","hashOfConfig":"21"},{"size":891,"mtime":1611573771631,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"14aeaex",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\index.js",[],["80","81"],"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\reportWebVitals.js",[],"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\App.js",[],"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\Footer.jsx",[],"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\contact.jsx",[],"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\nomatch.jsx",[],"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\Products\\Products.jsx",[],"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\about.jsx",["82"],"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\Products\\ProductDisplay.jsx",["83","84","85","86"],"import React from \"react\";\r\nimport \"./ProductDisplay.css\";\r\n// import Image from \"../../1.jpg\";\r\nimport { WaterSealData, ChemicalSealData, OilSealData } from \"./ProductData\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Card,\r\n  Container,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const ProductDisplay = ({ match }) => {\r\n  const key_id = match.params.k_id;\r\n  if (key_id === \"1\") {\r\n    const data = WaterSealData.find(d => d.id === match.params.id);\r\n    return (\r\n      <Container style={{padding:\"2rem\"}} >\r\n        <Row  className=\"justify-content-md-center\">\r\n          <Col sm={12} md={8} lg={8} >\r\n          <Link to={`/products/${key_id}`}>\r\n            <Button>back</Button>\r\n          </Link>{\" \"}\r\n          </Col>\r\n          <Col sm={12} md={8} lg={5} >\r\n            <Card>\r\n              <img className=\"single-image\" src={data.img} alt=\"image\" />\r\n            </Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroupItem\r\n                style={{\r\n                  backgroundColor: \"rgb(72, 105, 155)\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <strong> Title: {data.Productname} </strong>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  backgroundColor: \"rgb(72, 105, 155)\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <strong>Application: {data.Content.Application}</strong>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  backgroundColor: \"rgb(72, 105, 155)\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <strong>Features: {data.Content.Features}</strong>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  backgroundColor: \"rgb(72, 105, 155)\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <strong>\r\n                  Operating Conditions: {data.Content.OperatingConditions}\r\n                </strong>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  backgroundColor: \"rgb(72, 105, 155)\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <strong>Pressure:{data.Content.Pressure}</strong>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  backgroundColor: \"rgb(72, 105, 155)\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <strong> AvailableSize:{data.Content.AvailableSize}</strong>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n           </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  } else if (key_id === \"2\") {\r\n    const data = ChemicalSealData.find(d => d.id === match.params.id);\r\n    return (\r\n      <Container className=\"justify-content-md-center\">\r\n        <Row style={{ backgroundColor: \"rgb(72, 105, 155)\", padding: \"2rem\" }}>\r\n          <Link to={`/products/${key_id}`}>\r\n            <Button>back</Button>\r\n          </Link>{\" \"}\r\n          <Col sm={12} md={5} lg={4}>\r\n            <Card>\r\n              <img className=\"single-image\" src={data.img} alt=\"image\" />\r\n            </Card>\r\n          </Col>\r\n          <Col sm={12} md={7} lg={6}>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroupItem\r\n                style={{\r\n                  backgroundColor: \"rgb(72, 105, 155)\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <strong> Title: {data.Productname} </strong>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  backgroundColor: \"rgb(72, 105, 155)\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <strong>Application: {data.Content.Application}</strong>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  backgroundColor: \"rgb(72, 105, 155)\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <strong>Features: {data.Content.Features}</strong>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  backgroundColor: \"rgb(72, 105, 155)\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <strong>\r\n                  Operating Conditions: {data.Content.OperatingConditions}\r\n                </strong>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  backgroundColor: \"rgb(72, 105, 155)\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <strong>Pressure:{data.Content.Pressure}</strong>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  backgroundColor: \"rgb(72, 105, 155)\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <strong> AvailableSize:{data.Content.AvailableSize}</strong>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  } else if (key_id === \"3\") {\r\n    const data = OilSealData.find(d => d.id === match.params.id);\r\n    return (\r\n      <Container className=\"justify-content-md-center\">\r\n        <Link to={`/products/${key_id}`}>\r\n          <Button>back</Button>\r\n        </Link>{\" \"}\r\n        <Row style={{ backgroundColor: \"rgb(72, 105, 155)\", padding: \"2rem\" }}>\r\n          <Col sm={12} md={5} lg={4}>\r\n            <Card>\r\n              <img className=\"single-image\" src={data.img} alt=\"image\" />\r\n            </Card>\r\n          </Col>\r\n          <Col sm={12} md={7} lg={6}>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroupItem\r\n                style={{\r\n                  backgroundColor: \"rgb(72, 105, 155)\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <strong> Title: {data.Productname} </strong>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  backgroundColor: \"rgb(72, 105, 155)\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <strong>Application: {data.Content.Application}</strong>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  backgroundColor: \"rgb(72, 105, 155)\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <strong>Features: {data.Content.Features}</strong>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  backgroundColor: \"rgb(72, 105, 155)\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <strong>\r\n                  Operating Conditions: {data.Content.OperatingConditions}\r\n                </strong>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  backgroundColor: \"rgb(72, 105, 155)\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <strong>Pressure:{data.Content.Pressure}</strong>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  backgroundColor: \"rgb(72, 105, 155)\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <strong> AvailableSize:{data.Content.AvailableSize}</strong>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n","C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\home.jsx",[],"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\navbar.jsx",[],"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\jumbo.jsx",[],"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\Products\\ProductCategory.jsx",[],"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\Cardlist.jsx",[],"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\Data.jsx",[],"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\Products\\ProductData.jsx",[],"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\ProductJumbo.jsx",[],"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\Products\\ProductCard.jsx",[],"C:\\Users\\shadi\\Desktop\\React Projects\\Ast1\\src\\Components\\Cards.jsx",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":83,"column":60,"nodeType":"93","endLine":83,"endColumn":87},{"ruleId":"94","severity":1,"message":"95","line":8,"column":3,"nodeType":"96","messageId":"97","endLine":8,"endColumn":8},{"ruleId":"98","severity":1,"message":"99","line":31,"column":15,"nodeType":"100","endLine":31,"endColumn":74},{"ruleId":"98","severity":1,"message":"99","line":99,"column":15,"nodeType":"100","endLine":99,"endColumn":74},{"ruleId":"98","severity":1,"message":"99","line":169,"column":15,"nodeType":"100","endLine":169,"endColumn":74},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]